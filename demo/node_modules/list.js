const bel = require('bel')
const csjs = require('csjs-inject')
const file = require('path').basename(__filename)
const style_sheet = require('../../src/node_modules/support-style-sheet')
const button = require('../../src/index')
const message_maker = require('../../src/node_modules/message_maker')

module.exports = i_list

function i_list ({page = 'Demo', flow = 'ui-list', name, body = [], is_expanded = false, is_hidden }, protocol) {
    const make = message_maker(`${name}/${flow}/i_list`)
    const message = make({to: page, type: 'ready', data: body})
    const recipients = [] 
    const send = protocol( get )
    send(message)
    send({page, from: name, flow, type: 'ready', file, fn: 'i_list', line: 12})
    const list = document.createElement('i-list')
    list.setAttribute('role', 'listbox')
    list.ariaHidden = false
    list.ariaLabel = name
    list.tabIndex = 0

    try {
        body.map( (option, i) => {
            const {text, icon} = option
            const selected = i === 0 ? true : false
            // todo: make button event when click
            let item = button({page, name: text, body: text, icon, is_selected: selected, theme: { props: { bg_color: 'transparent', bg_color_hover: 'transparent'}}}, button_protocol(text))
            const li = bel`<li role="option" data-option=${text.toLowerCase()}">${item}</li>`
            list.append(li)
            if (i === 0) list.setAttribute('aria-activedescendant', text)
        })
        if (body.length === 0) send({from: name, flow, type: 'error', body: 'body no items', fn: 'i_list', file, line: 25})
    } catch(e) {
        send({from: name, flow, type: 'error', body: 'something went wrong', fn: 'i_list', file, line: 27})
    }
    
    return list

    function button_protocol (name) {
        return (send) => {
            recipients[name] = send
            return get
        }
    }

    function get (msg) {
        // console.log( msg );
        send(msg)
    }
}